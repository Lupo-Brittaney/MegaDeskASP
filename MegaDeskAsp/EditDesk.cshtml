@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "MegaDesk | Edit Quote";

    //Set variables
    var custName = "";
    var date = "";
    var width = "";
    var depth = "";
    var material = "";
    var rushDays = "";
    var drawers = "";
    var quote = "";
    var deskId = "";

    //Set constants for width and depth
    var minWidth = 24.00;
    var maxWidth = 96.00;
    var minDepth = 12.00;
    var maxDepth = 48.00;

    //load information for page
    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            deskId = Request.QueryString["ID"];
            var db = Database.Open("DeskDatabase");
            var dbCommand = "SELECT * FROM Desks WHERE ID = @0";
            var row = db.QuerySingle(dbCommand, deskId);

            if (row != null)
            {
                custName = row.custName;
                width = row.width.ToString();
                depth = row.depth.ToString();
                material = row.material;
                drawers = row.drawers.ToString();
                rushDays = row.rushDays.ToString();
                quote = row.quote.ToString();
                date = row.Date.ToString();
            }
            else
            {
                Validation.AddFormError("No desk was selected.");
            }
        }
        else
        {
            Validation.AddFormError("No desk was selected.");
        }
    }
    //submit button is clicked
    if (IsPost)
    {
        //Validate input
        Validation.RequireField("custName", "Customer name cannot be blank");
        Validation.RequireField("width", "Width cannot be blank");
        Validation.RequireField("depth", "Depth cannot be blank");
        Validation.RequireField("drawers", "Drawers cannot be blank");
        Validation.RequireField("material", "Material cannot be blank");
        Validation.RequireField("rushDays", "Rush days cannot be blank");
        Validation.RequireField("quote", "Quote cannot be blank");
        Validation.RequireField("deskId", "No desk ID was submitted!");

        Validation.Add("width", Validator.Range(minWidth, maxWidth, "Width must be between " + minWidth + " and " + maxWidth + ". Please correct the issue and try again."));
        Validation.Add("depth", Validator.Range(minDepth, maxDepth, "Depth must be between " + minDepth + " and " + maxDepth + ". Please correct the issue and try again."));

        //get values
        custName = Request.Form["custName"];
        width = Request.Form["width"];
        depth = Request.Form["depth"];
        drawers = Request.Form["drawers"];
        material = Request.Form["material"];
        rushDays = Request.Form["rushDays"];
        quote = Request.Form["quote"];
        deskId = Request.Form["deskID"];

        if (Validation.IsValid())
        {

            //Set defaults
            var basePrice = 200.00;
            var costPerDrawer = 50.00;
            var areaThreshold = 1000.00;
            var excessSurfArea = 1.0;
            var rushThreshold = 2000.00;
            var matPrice = 0.00;

            //Set material prices
            var priceLam = 100;
            var priceOak = 200;
            var priceRose = 300;
            var priceVen = 125;
            var pricePine = 50;

            //Set rush prices
            var rp1 = 60;
            var rp2 = 70;
            var rp3 = 80;
            var rp4 = 40;
            var rp5 = 50;
            var rp6 = 60;
            var rp7 = 30;
            var rp8 = 35;
            var rp9 = 40;

            //Intitialize costs
            var excAreaCost = 0.00;
            var drawerCost = 0.00;
            var rushCost = 0.00;

            //Calculate surface area
            var surfArea = Convert.ToDouble(width) * Convert.ToDouble(depth);

            //Calculate added cost for excess surface area
            if (surfArea > areaThreshold)
            {
                excAreaCost = (surfArea - areaThreshold) * excessSurfArea;
            }

            else
            {
                excAreaCost = 0.00;
            }

            //Calculate Drawer cost
            if (Convert.ToInt32(drawers) > 0)
            {
                drawerCost = costPerDrawer * Convert.ToInt32(drawers);
            }

            else
            {
                drawerCost = 0.00;
            }

            //Calculate Material Cost
            if (material == "Laminate")
            {
                matPrice = priceLam;
            }

            else if (material == "Veneer")
            {
                matPrice = priceVen;
            }

            else if (material == "Oak")
            {
                matPrice = priceOak;
            }

            else if (material == "Rosewood")
            {
                matPrice = priceRose;
            }

            else if (material == "Pine")
            {
                matPrice = pricePine;
            }

            //Calculate rush cost
            if (Convert.ToInt32(rushDays) == 3)
            {
                if (surfArea < areaThreshold)
                {
                    rushCost = rp1;
                }

                else if (surfArea <= rushThreshold)
                {
                    rushCost = rp2;
                }

                else
                {
                    rushCost = rp3;
                }
            }

            else if (Convert.ToInt32(rushDays) == 5)
            {
                if (surfArea < areaThreshold)
                {
                    rushCost = rp4;
                }

                else if (surfArea <= rushThreshold)
                {
                    rushCost = rp5;
                }

                else
                {
                    rushCost = rp6;
                }
            }

            else if (Convert.ToInt32(rushDays) == 7)
            {
                if (surfArea < areaThreshold)
                {
                    rushCost = rp7;
                }

                else if (surfArea <= rushThreshold)
                {
                    rushCost = rp8;
                }

                else
                {
                    rushCost = rp9;
                }
            }
            else
            {
                rushCost = 0.00;
            }


            //Calculate Quote
            var updateQuote = basePrice + excAreaCost + drawerCost + matPrice + rushCost;

            //Get new date and time
            DateTime updateDate = DateTime.Now;


            var db = Database.Open("DeskDatabase");
            var updateCommand = "UPDATE Desks SET custName=@0, width=@1, depth=@2, drawers=@3, material=@4, rushDays=@5, quote=@6, date=@7 WHERE Id=@8";
            db.Execute(updateCommand, custName, width, depth, drawers, material, rushDays, updateQuote, updateDate, deskId);
            Response.Redirect("~/MegaDesk");

        }
    }
}


<div class="container">
    <div class="row">
        <div class="col-sm-2"></div>
        <div class="col-sm-8">
            <h2>Edit a Desk Quote</h2>
            @Html.ValidationSummary()
            <form method="post">
                <div class="form-group">
                    <fieldset>
                        <legend>Desk Information</legend>

                        <p>
                            <label class="control-label" for="custName">Customer Name</label>
                            <input class="form-control" type="text" id="custName" name="custName" value="@custName" readonly />
                        </p>

                        <p>
                            <label class="control-label" for="material">Surface Material:</label>
                            <!--  <input type="text" id="material" name="material" value="@material" /> -->
                            <select class="form-control" name="material" id="material">
                                <option value="@material">@material</option>
                                <option value="Oak">Oak</option>
                                <option value="Laminate">Laminate</option>
                                <option value="Pine">Pine</option>
                                <option value="Rosewood">Rosewood</option>
                                <option value="Veneer">Veneer</option>
                            </select>
                        </p>

                        <p>
                            <label class="control-label" for="drawers">Number of Drawers:</label>
                            <!--<input type="text" id="drawers" name="drawers" value="@drawers" /> -->
                            <select class="form-control" name="drawers" id="drawers">
                                <option value="@drawers">@drawers</option>
                                <option value=0>0</option>
                                <option value=1>1</option>
                                <option value=2>2</option>
                                <option value=3>3</option>
                                <option value=4>4</option>
                                <option value=5>5</option>
                                <option value=6>6</option>
                                <option value=7>7</option>
                            </select>

                        </p>

                        <p>
                            <label class="control-label" for="width">Width(in):</label>
                            <input class="form-control" type="text" id="width" name="width" value="@width" />
                        </p>

                        <p>
                            <label class="control-label" for="depth">Depth(in):</label>
                            <input class="form-control" type="text" id="depth" name="depth" value="@depth" />
                        </p>

                        <p>
                            <label class="control-label" for="rushDays">Shipping Speed:</label>
                            <!-- <input type="text" id="rushDays" name="rushDays" value="@rushDays" /> -->
                            <select class="form-control" name="rushDays" id="rushDays">
                                <option value="@rushDays">@rushDays days</option>
                                <option value=14>14 days (Standard shipping)</option>
                                <option value=3>3 days</option>
                                <option value=5>5 days</option>
                                <option value=7>7 days</option>
                            </select>
                        </p>
                        <p>
                            <label class="control-label" for="quote">Quote: $</label>
                            <input class="form-control" type="text" id="quote" name="quote" value="@quote" readonly />
                        </p>
                        <p>**Quote will update upon submission**</p>
                        <input type="hidden" name="deskId" value="@deskId" />
                        <p><input type="submit" name="buttonSubmit" class="btn btn-default" value="Submit Changes" /></p>
                    </fieldset>
                </div>
            </form>
            <p><a href="~/MegaDesk">Return to view all quotes</a>
        </div>
    </div>
</div>

